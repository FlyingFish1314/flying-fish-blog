<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>飞鱼的个人博客</title>
        <link>https://flying-fish-blog.netlify.app/</link>
        <description>个人博客，记录学习笔记和总结</description>
        <lastBuildDate>Mon, 20 Mar 2023 05:03:48 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <image>
            <title>飞鱼的个人博客</title>
            <url>https://raw.githubusercontent.com/FlyingFish1314/chartbed/main/%E5%A4%B4%E5%83%8F.jpg</url>
            <link>https://flying-fish-blog.netlify.app/</link>
        </image>
        <copyright>CC BY-NC-SA 4.0 2023 © 飞鱼</copyright>
        <atom:link href="https://flying-fish-blog.netlify.app/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[正则表达式]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/工具/正则表达式</link>
            <guid>https://flying-fish-blog.netlify.app/posts/工具/正则表达式</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<p>[[toc]]</p>
<h2>1.基本使用</h2>
<pre><code class="language-javaScript">  var str = &quot;abc123def&quot;;
  var patt1 = /[0-9]+/;
  document.write(</code></pre>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[静态站点生成器与托管平台]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/测试/excerpt-type-md</link>
            <guid>https://flying-fish-blog.netlify.app/posts/测试/excerpt-type-md</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>静态站点生成器</h2>
<h2>静态站点托管平台</h2>
<p>目前已有很多第三方静态站点托管平台。</p>
<p><a href="https://pages.github.com/">GitHub Pages</a> 是其中的代表。<br>
此外还有</p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[Categories A > B > C]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/测试/分类测试</link>
            <guid>https://flying-fish-blog.netlify.app/posts/测试/分类测试</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[Valaxy 开发笔记]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/测试/测试</link>
            <guid>https://flying-fish-blog.netlify.app/posts/测试/测试</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<p>::: zh-CN<br>
还什么都没写呢……<br>
:::</p>
<p>::: en<br>
Nothing has been written……<br>
:::</p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[Object.create实现]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/Object.create</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/Object.create</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<p>[[toc]]</p>
<h2>1.代码实现</h2>
<ul>
<li>思路：将传入的对象作为原型</li>
</ul>
<p><strong>实现：</strong></p>
<pre><code class="language-JavaScript">function create (obj){
  function F(){</code></pre>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[call、apply、bind函数]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/call、apply及bind</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/call、apply及bind</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h3>0.思考</h3>
<ul>
<li>三者有何区别？</li>
<li>不传如第一个参数，如何让上下文默认为window</li>
<li>改变了this指向，让新对象可以执行该函数，并能接受参数</li>
</ul>
<h2>1.<code>call</code>函数</h2>
<h3>1.1</h3>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[instanceof 方法]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/instanceof 方法</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/instanceof 方法</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.代码实现</h2>
<blockquote>
<p>描述：<code>instanceof</code> 运算符用于检测构造函数的 <code>prototype</code> 属性是否出现在某个实例对象的原型链上。</p>
</blockquote>
<p><strong>代码：</strong></p>
<pre><code class="language-JavaScript">fun</code></pre>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[new 操作符]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/new 操作符</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/手写代码/new 操作符</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<p>[[toc]]</p>
<h2>1.代码实现</h2>
<p><strong>思路：</strong></p>
<ul>
<li>创建一个新的空对象</li>
<li>设置原型，将对象的原型设置为函数的<code>prototype</code>对象</li>
<li>让函数的this指向这个对象，执行构造函数的代</li>
</ul>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[github使用技巧]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/收藏夹/工具箱/github使用技巧</link>
            <guid>https://flying-fish-blog.netlify.app/posts/收藏夹/工具箱/github使用技巧</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.github主页贪吃蛇怎么设置</h2>
<p><strong>先看这篇：</strong>[给GitHub首页添加一个有趣的贪吃蛇小动画](<a href="https://cloud.tencent.com/developer/article/">https://cloud.tencent.com/developer/article/</a></p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[2023-3月日常]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/日常/2023/3月</link>
            <guid>https://flying-fish-blog.netlify.app/posts/日常/2023/3月</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<p>[[toc]]</p>
<h2>第二周</h2>
<h3>周二（2023-03-14）</h3>
<h4>js基础知识点及常考题回顾</h4>
<p><strong>主要学习地址：</strong></p>
<ul>
<li>[前端面试之道（掘金小册）](<a href="https://juejin.c">https://juejin.c</a></li>
</ul>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[出重复字串的最长字串]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/算法/leetcode/03-无重复字串的最长字串</link>
            <guid>https://flying-fish-blog.netlify.app/posts/算法/leetcode/03-无重复字串的最长字串</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.描述：</h2>
<ul>
<li>给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。</li>
</ul>
<p><strong>实例1</strong></p>
<blockquote>
<p>输入: s = &quot;abcabcbb&quot;<br>
输出: 3<br>
解释: 因为无重复字符的最长子串是</p>
</blockquote>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[反转链表]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/算法/leetcode/206-反转链表</link>
            <guid>https://flying-fish-blog.netlify.app/posts/算法/leetcode/206-反转链表</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.题目：<a href="https://leetcode.cn/problems/reverse-linked-list/">206.反转链表</a></h2>
<p><strong>实例1</strong><br>
![图片](<a href="https://assets">https://assets</a></p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[两两交换链表中的结点]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/算法/leetcode/24-两两交换链表中的结点</link>
            <guid>https://flying-fish-blog.netlify.app/posts/算法/leetcode/24-两两交换链表中的结点</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.题目<a href="https://leetcode.cn/problems/swap-nodes-in-pairs/">24. 两两交换链表中的节点</a></h2>
<ul>
<li>给你一个链表，两两交换其中相邻的节点，并返</li>
</ul>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[替换空格]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/算法/leetcode/剑指aoffer05.替换空格</link>
            <guid>https://flying-fish-blog.netlify.app/posts/算法/leetcode/剑指aoffer05.替换空格</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.题目<a href="https://leetcode.cn/problems/ti-huan-kong-ge-lcof/">剑指 Offer 05. 替换空格</a></h2>
<p><strong>实例1</strong></p>
<blockquote>
<p>输入：s = &quot;We</p>
</blockquote>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[出重复字串的最长字串]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/算法/leetcode/面试题02.07.链表相交</link>
            <guid>https://flying-fish-blog.netlify.app/posts/算法/leetcode/面试题02.07.链表相交</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[01.vue3的优化]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/Vue/vue3学习/01.vue3的优化</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/Vue/vue3学习/01.vue3的优化</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<p>[[TOC]]</p>
<h2>1.源码优化</h2>
<ul>
<li>优化目的：提高代码的易于开发和可维护性</li>
<li>优化方向：
<ul>
<li>monorepo</li>
<li>typescript</li>
</ul>
</li>
</ul>
<h3>1.1更好的代码管理方式：mono</h3>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[02.组件渲染：vnode到真实DOM是如何转变的？]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/Vue/vue3学习/02.组件渲染：vnode到真实DOM转变过程</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/Vue/vue3学习/02.组件渲染：vnode到真实DOM转变过程</guid>
            <pubDate>Mon, 20 Mar 2023 05:03:10 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.应用程序初始化</h2>
<ul>
<li>本质： App 组件挂载到 id 为 app 的 DOM 节点上。</li>
<li>区别：在 Vue.js 3.0 中还导入了一个 createApp，其实这是个入口函数，它是 V</li>
</ul>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[Hello, Valaxy!]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/测试/hello-valaxy</link>
            <guid>https://flying-fish-blog.netlify.app/posts/测试/hello-valaxy</guid>
            <pubDate>Fri, 01 Apr 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2>Valaxy</h2>
<p>Next Generation Static Blog Framework.</p>
<p>Write your first post!</p>
<h2>Usage</h2>
<p>Modify `valaxy</p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[Hello, Valaxy!]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/测试/测试2</link>
            <guid>https://flying-fish-blog.netlify.app/posts/测试/测试2</guid>
            <pubDate>Wed, 23 Mar 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2>What is Valaxy? {lang=&quot;en&quot;}</h2>
<p>::: en<br>
Valaxy aims to be a next generation of static blogging frame</p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[事件循环]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/事件循环</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/事件循环</guid>
            <pubDate>Sat, 19 Mar 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.事件循环</h2>
<h3>1.1事件循环的流程</h3>
<p>事件循环（Event Loop）是JavaScript的核心机制之一，它用于协调执行栈和任务队列之间的关系。当执行栈为空时，事件循环会从任务队列中</p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[数据类型]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/数据类型</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/数据类型</guid>
            <pubDate>Sat, 19 Mar 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h3>1.数据类型有哪些？</h3>
<p><strong>原始数据类型：</strong><br>
...<br>
Symbol:<br>
<em>Symbol是干什么的？</em></p>
<blockquote>
<p>Symbol是JavaScript语言的一种基本类型，表示独一无二的值。它们通常被用作</p>
</blockquote>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[数据类型]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/设计模式</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/设计模式</guid>
            <pubDate>Sat, 19 Mar 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.发布订阅模式</h2>
<p><a href="https://juejin.cn/post/6844903850105634824#heading-2">JavaScript 发布-订阅模式</a></p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[数组对象扁平化]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/面试/面试是手写题/数组扁平化</link>
            <guid>https://flying-fish-blog.netlify.app/posts/面试/面试是手写题/数组扁平化</guid>
            <pubDate>Sat, 19 Mar 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><strong>给一个树形结构，实现根据id返回name属性的功能</strong></p>
<pre><code class="language-JavaScript">let tree = [
  {
    id: 1,
    name: &quot;北京&quot;,
    childre</code></pre>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
        <item>
            <title><![CDATA[闭包]]></title>
            <link>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/闭包</link>
            <guid>https://flying-fish-blog.netlify.app/posts/JavaScript/知识点/闭包</guid>
            <pubDate>Fri, 18 Mar 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2>1.闭包（closure）和对象</h2>
<ul>
<li>共同特性：</li>
</ul>
<blockquote>
<p>都可以对一个状态值进行封装和创建行为</p>
</blockquote>
<h3>闭包的描述</h3>
<p><em>为什么要使用闭包？</em><br>
看看AI怎么回答<br>
闭包是一种非常有用的编程技术，它可以</p>
]]></content:encoded>
            <author>i@valaxy.site (飞鱼)</author>
        </item>
    </channel>
</rss>
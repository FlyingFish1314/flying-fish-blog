import{_ as m}from"./ValaxyMain.vue_vue_type_style_index_0_lang-8e683539.js";import{_ as d,c as p,w as a,o as c,a as t,b as n,d as u,r as o,e as f,p as h}from"./app-d437ec14.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-023ce13c.js";import"./YunCard.vue_vue_type_style_index_0_lang-d177144b.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-350ab47c.js";const j=JSON.parse('{"title":"数据类型","description":"","frontmatter":{"title":"数据类型","date":"2023-03-19T00:00:00.000Z","updated":"2022-03-19T00:00:00.000Z","cover":"https://fastly.jsdelivr.net/gh/YunYouJun/cdn/img/bg/astronaut.webp","categories":["JavaScript","知识点"],"tags":["数据类型"]},"headers":[{"level":3,"title":"1.数据类型有哪些？","slug":"_1-数据类型有哪些？","link":"#_1-数据类型有哪些？","children":[]}],"relativePath":"pages/posts/JavaScript/知识点/数据类型.md","path":"/home/runner/work/flying-fish-blog/flying-fish-blog/pages/posts/JavaScript/知识点/数据类型.md","lastUpdated":1679288561000}'),s=JSON.parse('{"title":"数据类型","description":"","frontmatter":{"title":"数据类型","date":"2023-03-19T00:00:00.000Z","updated":"2022-03-19T00:00:00.000Z","cover":"https://fastly.jsdelivr.net/gh/YunYouJun/cdn/img/bg/astronaut.webp","categories":["JavaScript","知识点"],"tags":["数据类型"]},"headers":[{"level":3,"title":"1.数据类型有哪些？","slug":"_1-数据类型有哪些？","link":"#_1-数据类型有哪些？","children":[]}],"relativePath":"pages/posts/JavaScript/知识点/数据类型.md","path":"/home/runner/work/flying-fish-blog/flying-fish-blog/pages/posts/JavaScript/知识点/数据类型.md","lastUpdated":1679288561000}'),b={name:"pages/posts/JavaScript/知识点/数据类型.md",data(){return{data:s,frontmatter:s.frontmatter}},setup(){h("pageData",s)}},S={id:"_1-数据类型有哪些？",tabindex:"-1"},_=t("p",null,[t("strong",null,"原始数据类型："),n(" ... Symbol: "),t("em",null,"Symbol是干什么的？")],-1),g=t("blockquote",null,[t("p",null,[n("Symbol是JavaScript语言的一种基本类型，表示独一无二的值。它们通常被用作对象属性的键。Symbol可以用Symbol()函数创建，每一个Symbol都是唯一的，即使它们有相同的名称。Symbol值是不可改变和不可复制的，这使得它们非常适合作为对象属性的键，因为它们可以确保不会与其他属性键冲突。在ES6之前，JavaScript中的对象属性键只能是字符串，这可能会导致属性名冲突的问题。Symbol解决了这个问题，使得对象属性键可以是独一无二的值。除了作为对象属性键之外，Symbol还可用于创建私有成员和迭代器等。 "),t("em",null,"Symbol的具体应用场景：")]),t("ul",null,[t("li",null,"避免命名冲突：在使用第三方库时，如果直接使用字符串作为对象属性名，可能会和第三方库中的属性名冲突，使用Symbol作为属性名可以避免这种冲突。")])],-1),v=t("ul",null,[t("li",null,"私有属性和方法：使用Symbol作为对象的属性名，可以模拟实现私有属性和方法，因为Symbol作为属性名不容易被外部访问到。"),t("li",null,"枚举：使用Symbol定义枚举类型，可以提高代码的可读性和可维护性。"),t("li",null,"Iterator接口：Symbol.iterator可以定义对象的默认迭代器，使得对象可以使用for...of循环进行遍历。"),t("li",null,"作为类的静态常量：使用Symbol定义类的静态常量，可以防止常量被修改或者覆盖。 总之，Symbol的最大作用就是创建一个不重复的属性名。它可以用作对象属性名，避免属性名冲突，也可以用作常量定义，避免常量被修改或者覆盖。")],-1),y=t("p",null,[t("strong",null,"引用数据类型：")],-1);function $(e,J,k,w,l,N){const r=f,i=m;return c(),p(i,{frontmatter:l.frontmatter,data:l.data},{"main-content-md":a(()=>[t("h3",S,[n("1.数据类型有哪些？ "),u(r,{class:"header-anchor",href:"#_1-数据类型有哪些？","aria-hidden":"true"},{default:a(()=>[n("#")]),_:1})]),_,g,v,y]),"main-header":a(()=>[o(e.$slots,"main-header")]),"main-header-after":a(()=>[o(e.$slots,"main-header-after")]),"main-nav":a(()=>[o(e.$slots,"main-nav")]),"main-content":a(()=>[o(e.$slots,"main-content")]),"main-content-after":a(()=>[o(e.$slots,"main-content-after")]),"main-nav-before":a(()=>[o(e.$slots,"main-nav-before")]),"main-nav-after":a(()=>[o(e.$slots,"main-nav-after")]),comment:a(()=>[o(e.$slots,"comment")]),footer:a(()=>[o(e.$slots,"footer")]),aside:a(()=>[o(e.$slots,"aside")]),"aside-custom":a(()=>[o(e.$slots,"aside-custom")]),default:a(()=>[o(e.$slots,"default")]),_:3},8,["frontmatter","data"])}const D=d(b,[["render",$]]);export{j as __pageData,D as default};
